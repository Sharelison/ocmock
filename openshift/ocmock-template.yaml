apiVersion: v1
kind: Template
metadata:
  labels:
    app: ocmock
  name: ocmock
objects:
  - apiVersion: v1
    kind: BuildConfig
    metadata:
      labels:
        app: ${NAME}
      name: ${NAME}
    output:
      to:
        kind: ImageStreamTag
        name: ${NAME}:latest
      type: Docker
    spec:
      source:
        git:
          ref: ${GIT_REF}
          uri: ${GIT_REPO}
        type: Git
      strategy:
        type: Docker
      output:
        to: 
          kind: ImageStreamTag
          name: ${NAME}:latest
      triggers:
        - type: ConfigChange
  - apiVersion: v1
    kind: ImageStream
    metadata:
      labels:
        app: ${NAME}
      name: ${NAME}
  - apiVersion: v1
    kind: DeploymentConfig
    metadata:
      labels:
        app: ${NAME}
      name: ${NAME}
    spec:
      replicas: 1
      selector:
        app: ${NAME}
      template:
        metadata:
          labels:
            app: ${NAME}
          name: ${NAME}
        spec:
          containers:
            - image: " "
              name: ${NAME}
              ports:
                - containerPort: 8080
                  protocol: TCP
              volumeMounts:
                - mountPath: ${ROOT_DIR}/mappings
                  name: config-mappings
                - mountPath: ${ROOT_DIR}/__files
                  name: config-files    
              args:
                - "--root-dir=${ROOT_DIR}"                              
          volumes:
            - configMap:
                name: ${NAME}-mappings
              name: config-mappings
            - configMap:
                name: ${NAME}-files
              name: config-files
      triggers:
        - type: ConfigChange
        - type: ImageChange
          imageChangeParams:
            containerNames:
              - ${NAME}
            automatic: true
            from:
              kind: ImageStreamTag
              name: ${NAME}:latest
  - apiVersion: v1
    kind: Service
    metadata:
      labels:
        app: ${NAME}
      name: ${NAME}
    spec:
      ports:
        - name: 8080-tcp
          port: 8080
          protocol: TCP
          targetPort: 8080
      selector:
        app: ${NAME}
  - apiVersion: v1
    kind: Route
    metadata:
      labels:
        app: ${NAME}
      name: ${NAME}
    spec:
      port:
        targetPort: 8080
      to:
        kind: Service
        name: ${NAME}
  - apiVersion: v1
    kind: ConfigMap
    metadata:
      labels:
        app: ${NAME}
      name: ${NAME}-mappings  
    data:
      helloworld.json: |-
        {
          "request": {
            "method": "GET",
            "url": "/api/v1/helloworld"
          },
          "response": {
            "status": 200,
            "bodyFileName": "helloworld.json",
            "headers": {
              "Content-Type": "application/json;charset=UTF-8"
            }
          }
        }  
  - apiVersion: v1
    kind: ConfigMap
    metadata:
      labels:
        app: ${NAME}
      name: ${NAME}-files
    data:
      helloworld.json: |-
        {
          "message": "Hello World"
        }        
parameters:
  - name: NAME
    value: ocmock
  - name: ROOT_DIR
    value: /wiremock
  - name: WIREMOCK_VERSION
    value: 2.25.1
  - name: GIT_REPO
    value: https://github.com/Sharelison/ocmock.git
  - name: GIT_REF
    value: master
